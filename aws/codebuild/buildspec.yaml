version: 0.2

env:
  exported-variables:
    - IMAGE

phases:
  install:
    commands:
      - echo Setting up docker
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      # Logging in to Amazon ECR...
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output text --query 'Account')
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - BUILD_ID=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - IMAGE_TAG=$(echo $IMAGE_TAG_PREFIX"-"$BUILD_ID)
  build:
    commands:
      - echo Build started on $(date)      
      # Building the Docker image...
      - docker build --platform=linux/amd64 -t $REPOSITORY_URI:$IMAGE_TAG .
  post_build:
    commands:
      - echo Build completed on $(date)
      # Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - IMAGE=$REPOSITORY_URI:$IMAGE_TAG
      - printf '{"ImageURI":"'"$IMAGE"'"}' > imageDetail.json

artifacts:
  files:
    - ./imageDetail.json
    - ./aws/codedeploy/appspec.yaml
    - ./aws/codedeploy/taskdef.json
  discard-paths: yes
